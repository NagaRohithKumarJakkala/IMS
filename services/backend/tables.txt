CREATE TABLE Seller_Table (
    seller_id INT PRIMARY KEY,
    seller_name VARCHAR(64)
);

CREATE TABLE Product_Table (
    product_id VARCHAR(16) PRIMARY KEY,
    product_brand VARCHAR(32),
    product_name VARCHAR(128),
    description VARCHAR(512)
);

CREATE TABLE Branch_Table( 
    branch_id VARCHAR(16) PRIMARY KEY, 
    branch_name VARCHAR(128)
);

CREATE TABLE Cost_Table ( 
    branch_id VARCHAR(16), 
    product_id VARCHAR(16), 
    cost_of_item DECIMAL (10,2), 
    mrp DECIMAL (10,2), 
    SP DECIMAL (10,2), 
    PRIMARY KEY (branch_id, product_id), 
    FOREIGN KEY (branch_id) REFERENCES Branch_Table(branch_id) ON DELETE CASCADE, 
    FOREIGN KEY (product_id) REFERENCES Product_Table(product_id) ON DELETE CASCADE 
); 

CREATE TABLE Selling_Table ( 
    order_id BIGINT AUTO_INCREMENT, 
    product_id VARCHAR(16), 
    quantity_of_item INT CHECK (quantity_of_item > 0), 
    selling_time DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP, 
    branch_id VARCHAR(16), 
    SP DECIMAL (10,2), 
    PRIMARY KEY (order_id, product_id), 
    FOREIGN KEY (branch_id) REFERENCES Branch_Table(branch_id) ON DELETE CASCADE, 
    FOREIGN KEY (product_id) REFERENCES Product_Table(product_id) ON DELETE CASCADE 
);

CREATE TABLE Category_Table (
    product_id VARCHAR(16) PRIMARY KEY,
    category VARCHAR(64),
    FOREIGN KEY (product_id) REFERENCES Product_Table(product_id) ON DELETE CASCADE
);

CREATE TABLE Duration_Table (
    product_id VARCHAR(16),
    seller_id INT,
    manufactured_date DATE,
    duration_value INT,
    duration_unit ENUM('D', 'M', 'Y'),
    quantity_of_item INT CHECK (quantity_of_item >= 0),
    PRIMARY KEY (product_id, manufactured_date),
    FOREIGN KEY (product_id) REFERENCES Product_Table(product_id) ON DELETE CASCADE
);

CREATE TABLE user_level_table (
    user_id BIGINT AUTO_INCREMENT PRIMARY KEY,
    user_email VARCHAR(64) UNIQUE NOT NULL,
    level_of_access VARCHAR(16) NOT NULL
);

CREATE TABLE user_log (
    log_id BIGINT AUTO_INCREMENT PRIMARY KEY,
    user_id BIGINT,
    login_time DATETIME,
    logout_time DATETIME,
    FOREIGN KEY (user_id) REFERENCES user_level_table(user_id) ON DELETE CASCADE
);


